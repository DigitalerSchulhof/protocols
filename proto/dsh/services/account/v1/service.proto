syntax = "proto3";

package dsh.services.account.v1;

import "dsh/services/account/v1/resources.proto";
import "google/protobuf/field_mask.proto";

service AccountService {
  rpc ListAccounts(ListAccountsRequest) returns (ListAccountsResponse);

  rpc GetAccount(GetAccountRequest) returns (GetAccountResponse);

  rpc BatchGetAccounts(BatchGetAccountsRequest) returns (BatchGetAccountsResponse);

  rpc CreateAccount(CreateAccountRequest) returns (CreateAccountResponse);

  rpc UpdateAccount(UpdateAccountRequest) returns (UpdateAccountResponse);

  rpc UpdateAccountsWhere(UpdateAccountsWhereRequest) returns (UpdateAccountsWhereResponse);

  rpc DeleteAccount(DeleteAccountRequest) returns (DeleteAccountResponse);

  rpc DeleteAccountsWhere(DeleteAccountsWhereRequest) returns (DeleteAccountsWhereResponse);
}

message ListAccountsRequest {
  int32 limit = 1;
  int32 offset = 2;
  string filter = 3;
  string order_by = 4;
}

message ListAccountsResponse {
  repeated Account accounts = 1;
  Meta meta = 2;

  message Meta {
    int32 total_count = 1;
    int32 limit = 2;
    int32 offset = 3;
    bool has_previous = 4;
    bool has_next = 5;
  }
}

message GetAccountRequest {
  string id = 1;
}

message GetAccountResponse {
  Account account = 1;
}

message BatchGetAccountsRequest {
  repeated string ids = 1;
}

message BatchGetAccountsResponse {
  repeated Account accounts = 1;
}

message CreateAccountRequest {
  Account data = 1;
  optional string ifPersonRev = 2;
}

message CreateAccountResponse {
  Account account = 1;
}

message UpdateAccountRequest {
  string id = 1;
  Account data = 2;
  google.protobuf.FieldMask update_mask = 3;
  optional string if_rev = 4;
}

message UpdateAccountResponse {
  Account account = 1;
}

message UpdateAccountsWhereRequest {
  string filter = 1;
  Account data = 2;
  google.protobuf.FieldMask update_mask = 3;
}

message UpdateAccountsWhereResponse {
  repeated Account accounts = 1;
}

message DeleteAccountRequest {
  string id = 1;
  optional string if_rev = 2;
}

message DeleteAccountResponse {
  Account account = 1;
}

message DeleteAccountsWhereRequest {
  string filter = 1;
}

message DeleteAccountsWhereResponse {
  repeated Account accounts = 1;
}
