syntax = "proto3";

package dsh.services.person.v1;

import "dsh/services/person/v1/resources.proto";
import "google/protobuf/field_mask.proto";

service PersonService {
  rpc ListPersons(ListPersonsRequest) returns (ListPersonsResponse);

  rpc GetPerson(GetPersonRequest) returns (GetPersonResponse);

  rpc BatchGetPersons(BatchGetPersonsRequest) returns (BatchGetPersonsResponse);

  rpc CreatePerson(CreatePersonRequest) returns (CreatePersonResponse);

  rpc UpdatePerson(UpdatePersonRequest) returns (UpdatePersonResponse);

  rpc UpdatePersonsWhere(UpdatePersonsWhereRequest) returns (UpdatePersonsWhereResponse);

  rpc DeletePerson(DeletePersonRequest) returns (DeletePersonResponse);

  rpc DeletePersonsWhere(DeletePersonsWhereRequest) returns (DeletePersonsWhereResponse);
}

message ListPersonsRequest {
  int32 limit = 1;
  int32 offset = 2;
  string filter = 3;
  string order_by = 4;
}

message ListPersonsResponse {
  repeated Person persons = 1;
  Meta meta = 2;

  message Meta {
    int32 total_count = 1;
    int32 limit = 2;
    int32 offset = 3;
    bool has_previous = 4;
    bool has_next = 5;
  }
}

message GetPersonRequest {
  string id = 1;
}

message GetPersonResponse {
  Person person = 1;
}

message BatchGetPersonsRequest {
  repeated string ids = 1;
}

message BatchGetPersonsResponse {
  repeated Person persons = 1;
}

message CreatePersonRequest {
  Person data = 1;
}

message CreatePersonResponse {
  Person person = 1;
}

message UpdatePersonRequest {
  string id = 1;
  Person data = 2;
  google.protobuf.FieldMask update_mask = 3;
  optional string if_rev = 4;
}

message UpdatePersonResponse {
  Person person = 1;
}

message UpdatePersonsWhereRequest {
  string filter = 1;
  Person data = 2;
  google.protobuf.FieldMask update_mask = 3;
}

message UpdatePersonsWhereResponse {
  repeated Person persons = 1;
}

message DeletePersonRequest {
  string id = 1;
  optional string if_rev = 2;
}

message DeletePersonResponse {
  Person person = 1;
}

message DeletePersonsWhereRequest {
  string filter = 1;
}

message DeletePersonsWhereResponse {
  repeated Person persons = 1;
}
